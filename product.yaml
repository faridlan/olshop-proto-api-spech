openapi: 3.0.0
info:
  version: 1.0.0
  title: REST API Spech Olshop Prototype
  description: REST API Spech Olshop Prototype
  contact:
    name: Faridlan Nul Hakim
    email: faridlannulhakim@gmail.com

servers:
  - description: REST API Olshop
    url: http://159.223.72.43:3000/api

paths:
  /products:
    post:
      tags:
        - Products
      summary: Post a product
      description: Post a product to database
      requestBody:
        required: true
        description: Request Body for post a product
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOrUpdateProduct"
      responses:
        200:
          description: Success Create a Product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productResponse"
    get:
      tags:
        - Products
      summary: Get list products
      description: Get list products from database
      parameters:
        - name: page
          in: query
          description: page number (Default is 1)
          required: false
          schema:
            type: number
            example: 1
        - name: limit
          in: query
          description: limit list products (Default is 10)
          required: false
          schema:
            type: number
            example: 10
      responses:
        200:
          description: Success Get List Products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productResponses"

  /products/{idProduct}:
    get:
      tags:
        - Products
      summary: Get a product
      description: Get a product from database
      parameters:
        - name: idProduct
          in: path
          description: use idProduct from get a product
          required: true
          schema:
            type: string
            example: 08eea32bec0311ec9d4d0242ac130002
      responses:
        200:
          description: Success Get a Product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productResponse"

    put:
      tags:
        - Products
      summary: Update Or Edit a product
      description: Update Or Edit a product from database
      parameters:
        - name: idProduct
          in: path
          description: use idProduct for update a product
          required: true
          schema:
            type: string
            example: 08eea32bec0311ec9d4d0242ac130002
      requestBody:
        required: true
        description: Request Body for post a product
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOrUpdateProduct"
      responses:
        200:
          description: Success Update or Edit a Product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productResponse"
    delete:
      tags:
        - Products
      summary: Delete a product
      description: Delete a product from database
      parameters:
        - name: idProduct
          in: path
          description: use idProduct for delete a product
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success Delete a Product
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  status:
                    type: string
                    example: OK
  
  /image/products: 
    post:
      tags:
        - "Upload Image"
      summary: Upload An Image Of Product
      description: Upload Image To Cloud Storage
      requestBody:
        required: true
        description: Request Body for post a image product
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                productImage:
                  type: string
                  format: binary
            encoding:
              productImage:
                contentType: image/png, image/jpeg
      responses:
        200:
          description: Success Upload Image
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: OK
                  data:
                    type: object
                    properties:
                      image_url:
                        type: string
  /seeder:
    post:
      tags:
        - Seeder
      summary: Seeder Product
      description: Automate Insert To Table Products
      responses:
        200:
          description: Success Insert Products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/productResponses"
    delete:
      tags:
        - Seeder
      summary: Delete all products, except 1 product
      description: Delete a product from database
      responses:
        200:
          description: Success Delete Products
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 200
                  status:
                    type: string
                    example: OK

components:
  # securitySchemes:
  #   BasicAuth:
  #     type: http
  #     scheme: basic
  schemas:
    createOrUpdateProduct:
      type: object
      properties:
        name:
          type: string
          example: ProductXXX
        price:
          type: integer
          example: 999000
        quantity:
          type: integer
          example: 101
        image_url:
          type: string
          example: https://olshop-proto.sgp1.digitaloceanspaces.com/products/XVlBzgbaiC.png
    productResponse:
      type: object
      properties:
        code:
          type: number
          example: 200
        status:
          type: string
          example: OK
        data:
          $ref: "#/components/schemas/product"
    productResponses:
      type: object
      properties:
        code:
          type: number
          example: 200
        status:
          type: string
          example: OK
        data:
          type: array
          items:
            $ref: "#/components/schemas/product"
    product:
      type: object
      properties:
        id_product:
          type: string
          example: fa00099923hfjadkuieijj005
        name:
          type: string
          example: ProductA
        price:
          type: integer
          example: 99999
        quantity:
          type: integer
          example: 99
        image_url:
          type: string
          example: https://olshop-proto.sgp1.digitaloceanspaces.com/products/XVlBzgbaiC.png
        created_at:
          type: integer
          example: 1655224794321
          description: "Use Epoch Time, with Unix Milli Seconds"
# security:
#   - BasicAuth: []
